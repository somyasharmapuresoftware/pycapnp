name: manylinux2010

on: [push, pull_request]

jobs:
  manylinux2010:

    runs-on: ubuntu-latest
    container: ${{ matrix.container-image }}
    strategy:
      matrix:
          python-version: ['cp37-cp37m', 'cp38-cp38', 'cp39-cp39']
          container-image: ['quay.io/pypa/manylinux2010_x86_64']

    steps:
    # NOTE: Cannot use checkout@v2 as it requires a newer version glibc, but that's not possible with manylinux without a secondary sysroot
    - uses: actions/checkout@v1
    # capnproto build requires cmake 3+, CentOS 6 (manylinux2010) defaults to cmake 2.8
    
    - name: Install dependencies
      run: |
        yum install -y cmake3 ninja-build
        ln -sf /usr/bin/cmake3 /usr/local/bin/cmake
        ln -s /usr/bin/ninja-build /usr/local/bin/ninja
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install -r requirements.txt
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install auditwheel
    
    - name: Build pycapnp and install
      env:
        LDFLAGS: -Wl,--no-as-needed -lrt
      run: |
        /opt/python/${{ matrix.python-version }}/bin/python setup.py build
        
    - name: Packaging
      run: |
        /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel
        /opt/python/${{ matrix.python-version }}/bin/python setup.py sdist
        /opt/python/${{ matrix.python-version }}/bin/auditwheel repair dist/*linux_*.whl
    - uses: actions/upload-artifact@v1.0.0
      with:
        name: manylinux2010_dist
        path: wheelhouse

  manylinux2014:

      runs-on: ubuntu-latest
      container: ${{ matrix.container-image }}
      strategy:
            matrix:
              python-version: ['cp37-cp37m', 'cp38-cp38', 'cp39-cp39']
              arch: [aarch64]
      
      env:
        py: /opt/python/${{ matrix.python-version }}/bin/python
        img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
      
      steps:
    # NOTE: Cannot use checkout@v2 as it requires a newer version glibc, but that's not possible with manylinux without a secondary sysroot
      - uses: actions/checkout@v1
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        
      - name: Install dependencies
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
          source .env/bin/activate && \
          yum update && \
          /opt/python/${{ matrix.python-version }}/bin/python -m pip install -r requirements.txt && \
          /opt/python/${{ matrix.python-version }}/bin/python -m pip install auditwheel && \
          /opt/python/${{ matrix.python-version }}/bin/python setup.py build && \
          /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel && \
          deactivate'
          

          
